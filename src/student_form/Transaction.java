package student_form;

import java.awt.Dimension;
import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingWorker;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

public class Transaction extends javax.swing.JPanel {

    public Transaction() {
        initComponents();
        
        pendingModel = tableHeader(pendingTable);
        tableModel = tableHeader(readyToPay);
        
        pendingTableData();
        readyToPayTableData();
        refreshHistory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        createTransaction = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pendingTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        readyToPay = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 57, 57));
        jLabel1.setText("Transaction");

        jPanel2.setBackground(new java.awt.Color(255, 57, 57));
        jPanel2.setMinimumSize(new java.awt.Dimension(637, 0));
        jPanel2.setOpaque(false);

        createTransaction.setBackground(new java.awt.Color(255, 57, 57));
        createTransaction.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        createTransaction.setForeground(new java.awt.Color(255, 255, 255));
        createTransaction.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus.png"))); // NOI18N
        createTransaction.setText("Create Transaction");
        createTransaction.setBorder(null);
        createTransaction.setFocusPainted(false);
        createTransaction.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        createTransaction.setIconTextGap(0);
        createTransaction.setPreferredSize(new java.awt.Dimension(400, 120));
        createTransaction.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        createTransaction.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                createTransactionMouseReleased(evt);
            }
        });
        jPanel2.add(createTransaction);

        jPanel3.setBackground(new java.awt.Color(255, 57, 57));
        jPanel3.setMinimumSize(new java.awt.Dimension(637, 0));
        jPanel3.setPreferredSize(new java.awt.Dimension(500, 318));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Pending Transaction");
        jLabel2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));

        jScrollPane1.setBorder(null);

        pendingTable.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        pendingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Reference Number", "Date/Time", "Transaction", "Amount", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        pendingTable.setEnabled(false);
        pendingTable.setFillsViewportHeight(true);
        pendingTable.setFocusable(false);
        pendingTable.setGridColor(new java.awt.Color(193, 193, 193));
        pendingTable.setMaximumSize(new java.awt.Dimension(2147483647, 300));
        pendingTable.setRowHeight(50);
        pendingTable.setShowGrid(true);
        pendingTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(pendingTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        jPanel4.setBackground(new java.awt.Color(255, 57, 57));
        jPanel4.setMinimumSize(new java.awt.Dimension(637, 0));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Ready to Pay");
        jLabel3.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));

        jScrollPane2.setBorder(null);

        readyToPay.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        readyToPay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"4535436345", "342432", "sfdsfes", "343", "dawdas"},
                {"34324", "3234", "fsdfsdf", "324", "fsdf"},
                {"23434", "234", "fsefe", "342", "fefse"},
                {"4234", "23432", "wer", "324", "qweqe"},
                {"23424", "3243", "wer", "ewr", null}
            },
            new String [] {
                "Reference Number", "Expiry Date", "Transaction", "Amount", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        readyToPay.setEnabled(false);
        readyToPay.setFillsViewportHeight(true);
        readyToPay.setFocusable(false);
        readyToPay.setGridColor(new java.awt.Color(193, 193, 193));
        readyToPay.setMaximumSize(new java.awt.Dimension(2147483647, 300));
        readyToPay.setRowHeight(50);
        readyToPay.setShowGrid(true);
        readyToPay.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(readyToPay);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 772, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 772, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                .addGap(50, 50, 50)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    private void pendingTableData(){
        try {
            String[][] pendingData = database.StudentConnection.getPending(Dashboard.getAccountId(), "Pending");
            pendingModel.setRowCount(0);

            if (pendingData != null) {
                for (int i = (pendingData.length - 1); i >= 0; i--) {
                    String formatTimeDate = pendingData[i][1].replace(", ", " / ");

                    Object[] newRow = {pendingData[i][0], formatTimeDate, pendingData[i][2], pendingData[i][3], pendingData[i][4]};

                    pendingModel.addRow(newRow);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Connection Error.",
                    null, JOptionPane.WARNING_MESSAGE);
        }
    }
    
    private void readyToPayTableData(){
        try {
            String[][] pendingData = database.StudentConnection.getPending(Dashboard.getAccountId(), "Waiting");
            tableModel.setRowCount(0);

            if (pendingData != null) {
                for (int i = (pendingData.length - 1); i >= 0; i--) {
                    Object[] newRow = {pendingData[i][0], pendingData[i][1], pendingData[i][2], pendingData[i][3], pendingData[i][4]};

                    tableModel.addRow(newRow);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Connection Error.",
                    null, JOptionPane.WARNING_MESSAGE);
        }
    }
    
    
    private void refreshHistory(){
        
        SwingWorker <Void, Void> worker = new SwingWorker<Void, Void>(){
            @Override
            protected Void doInBackground() throws Exception {
                Timer timer = new Timer(1000, (e) -> {
                    pendingTableData();
                    readyToPayTableData();
                });
                
                timer.start();
                
                return null;
            }
        };
        worker.execute();
    }
    
    
    
    private DefaultTableModel tableHeader(JTable table){
        model = (DefaultTableModel) table.getModel();
        
        JTableHeader tableHeader = table.getTableHeader();
        tableHeader.setFont(new Font("Arial", Font.BOLD, 13));
        tableHeader.setPreferredSize(new Dimension(tableHeader.getWidth(), 50));
        
        return model;
    }
    
    private void createTransactionMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createTransactionMouseReleased
        Dashboard.contentPanel.removeAll();
        Dashboard.contentPanel.add(new components.CreateTransaction());
        Dashboard.contentPanel.revalidate();
        Dashboard.contentPanel.repaint();
    }//GEN-LAST:event_createTransactionMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createTransaction;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable pendingTable;
    private javax.swing.JTable readyToPay;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel model;
    private DefaultTableModel pendingModel;
    private DefaultTableModel tableModel;
}
